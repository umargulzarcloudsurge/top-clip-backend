#!/usr/bin/env python3
"""
Cookie Processing Utility

This script processes the cookies.txt file to:
1. Extract only YouTube and Google cookies
2. Extend expiration dates to 100 years 
3. Create a clean YouTube cookies file for yt-dlp
"""

import os
import time
from datetime import datetime, timedelta

def process_cookies_file():
    """Process cookies.txt and create youtube_cookies.txt with extended expiration"""
    
    input_file = "cookies.txt"
    output_file = "youtube_cookies.txt"
    
    if not os.path.exists(input_file):
        print(f"‚ùå Error: {input_file} not found!")
        return False
    
    try:
        # Calculate expiration date 100 years from now
        future_date = datetime.now() + timedelta(days=365 * 100)
        future_timestamp = int(future_date.timestamp())
        print(f"üóìÔ∏è Setting expiration to: {future_date.strftime('%Y-%m-%d %H:%M:%S')} (timestamp: {future_timestamp})")
        
        youtube_cookies = []
        total_cookies = 0
        youtube_cookie_count = 0
        
        print(f"üìñ Reading cookies from {input_file}...")
        
        with open(input_file, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        # Add Netscape header
        youtube_cookies.append("# Netscape HTTP Cookie File\n")
        youtube_cookies.append("# Generated by cookie processor for YouTube\n")
        youtube_cookies.append("# Extended expiration to 100 years\n")
        youtube_cookies.append("\n")
        
        for line_num, line in enumerate(lines, 1):
            line = line.strip()
            
            # Skip empty lines and comments
            if not line or line.startswith('#'):
                continue
            
            total_cookies += 1
            
            # Parse cookie line (Netscape format)
            try:
                parts = line.split('\t')
                if len(parts) != 7:
                    print(f"‚ö†Ô∏è Skipping invalid cookie format at line {line_num}: {len(parts)} fields")
                    continue
                
                domain, domain_specified, path, secure, expiration, name, value = parts
                
                # Check if this is a YouTube or Google cookie
                if ('youtube.com' in domain.lower() or 
                    'google.com' in domain.lower() or
                    'googlevideo.com' in domain.lower() or
                    'gstatic.com' in domain.lower()):
                    
                    # Extend expiration to 100 years
                    old_expiration = expiration
                    expiration = str(future_timestamp)
                    
                    # Reconstruct the cookie line
                    new_cookie_line = f"{domain}\t{domain_specified}\t{path}\t{secure}\t{expiration}\t{name}\t{value}\n"
                    youtube_cookies.append(new_cookie_line)
                    
                    youtube_cookie_count += 1
                    print(f"‚úÖ Processing cookie: {name} from {domain} (extended from {old_expiration} to {expiration})")
                
            except Exception as e:
                print(f"‚ö†Ô∏è Error processing line {line_num}: {str(e)}")
                continue
        
        # Write processed cookies to output file
        print(f"üíæ Writing {youtube_cookie_count} YouTube/Google cookies to {output_file}...")
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.writelines(youtube_cookies)
        
        # Set file permissions
        os.chmod(output_file, 0o644)
        
        print(f"üéâ Success!")
        print(f"üìä Statistics:")
        print(f"   - Total cookies processed: {total_cookies}")
        print(f"   - YouTube/Google cookies found: {youtube_cookie_count}")
        print(f"   - Output file: {output_file}")
        print(f"   - All expiration dates extended to 100 years from now")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error processing cookies: {str(e)}")
        return False

if __name__ == "__main__":
    print("üîÑ YouTube Cookie Processor")
    print("=" * 50)
    success = process_cookies_file()
    
    if success:
        print("\nüí° Next steps:")
        print("1. The youtube_cookies.txt file is now ready for use")
        print("2. Your YouTube downloader will automatically use this file")
        print("3. Try downloading a video to test the cookies")
    else:
        print("\n‚ùå Cookie processing failed. Please check the error messages above.")
