#!/usr/bin/env python3
"""
Convert JSON cookies to Netscape format for yt-dlp compatibility
"""
import json
import os
from datetime import datetime

def convert_json_to_netscape():
    # Read the JSON cookies file
    with open('youtube_cookies.txt', 'r') as f:
        content = f.read().strip()
    
    # Parse the JSON (skip the first character '1|' if present)
    if content.startswith('1|'):
        content = content[2:]
    
    cookies = json.loads(content)
    
    print(f"Found {len(cookies)} cookies to convert")
    
    # Create Netscape format content
    netscape_lines = [
        "# Netscape HTTP Cookie File",
        "# Generated by YouTube Cookie Converter",
        "# This is a generated file!  Do not edit.",
        ""
    ]
    
    for cookie in cookies:
        # Extract cookie fields
        domain = cookie.get('domain', '')
        name = cookie.get('name', '')
        value = cookie.get('value', '')
        path = cookie.get('path', '/')
        expiration_date = cookie.get('expirationDate', 0)
        secure = cookie.get('secure', False)
        http_only = cookie.get('httpOnly', False)
        
        # Convert to Netscape format
        # Format: domain    domain_specified    path    secure    expiration    name    value
        domain_specified = 'TRUE' if domain.startswith('.') else 'FALSE'
        secure_flag = 'TRUE' if secure else 'FALSE'
        
        # Ensure expiration is an integer timestamp
        expiration_timestamp = int(expiration_date) if expiration_date else 0
        
        # Create the tab-separated line
        netscape_line = f"{domain}\t{domain_specified}\t{path}\t{secure_flag}\t{expiration_timestamp}\t{name}\t{value}"
        netscape_lines.append(netscape_line)
        
        # Show cookie info
        exp_date = datetime.fromtimestamp(expiration_timestamp) if expiration_timestamp > 0 else "Session"
        print(f"✅ {name}: {domain} (expires: {exp_date})")
    
    # Write to Netscape format file
    netscape_content = '\n'.join(netscape_lines)
    
    # Backup the original file
    if os.path.exists('youtube_cookies.txt'):
        os.rename('youtube_cookies.txt', 'youtube_cookies_json_backup.txt')
        print("📄 Backed up original JSON cookies to youtube_cookies_json_backup.txt")
    
    # Write the new Netscape format
    with open('youtube_cookies.txt', 'w', encoding='utf-8') as f:
        f.write(netscape_content)
    
    print(f"\n✅ Successfully converted {len(cookies)} cookies to Netscape format!")
    print("📁 Saved as youtube_cookies.txt (yt-dlp compatible)")
    
    # Verify the file
    print(f"\n🔍 File verification:")
    with open('youtube_cookies.txt', 'r') as f:
        lines = f.readlines()
    
    print(f"- Total lines: {len(lines)}")
    print(f"- Header lines: {len([l for l in lines if l.startswith('#') or not l.strip()])}")
    print(f"- Cookie lines: {len([l for l in lines if l.strip() and not l.startswith('#')])}")
    
    # Show first few lines
    print(f"\n📋 First 5 lines of the file:")
    for i, line in enumerate(lines[:5]):
        print(f"{i+1}: {line.rstrip()}")
    
    print(f"\n🎯 The file is now ready for yt-dlp to use!")

if __name__ == "__main__":
    convert_json_to_netscape()
