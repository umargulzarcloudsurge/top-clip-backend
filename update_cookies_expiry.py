#!/usr/bin/env python3
"""
Script to update YouTube cookies expiration dates to 100 years from now.
This extends the cookie validity period for long-term usage.
"""

import time
from datetime import datetime, timedelta

def update_cookies_expiry():
    """Update cookie expiration dates to 100 years from now."""
    
    # Calculate timestamp for 100 years from now
    current_time = datetime.now()
    future_time = current_time + timedelta(days=365 * 100)  # 100 years
    future_timestamp = int(future_time.timestamp())
    
    print(f"Current time: {current_time}")
    print(f"New expiry time: {future_time}")
    print(f"New expiry timestamp: {future_timestamp}")
    print("-" * 50)
    
    # Original cookies data
    original_cookies = """# Netscape HTTP Cookie File
# This file was generated by Cookie Editor https://chromewebstore.google.com/detail/cookie-editor/ookdjilphngeeeghgngjabigmpepanpl
#HttpOnly_.youtube.com	TRUE	/	TRUE	1754662832	GPS	1
#HttpOnly_.youtube.com	TRUE	/	TRUE	1786197175	__Secure-1PSIDTS	sidts-CjUB5H03P9IIbV5n1gyv9tD6VlXuGQ1P4VNLuLNT-kDDUvys_LYvgfeGcvTsU2AlKqxgvJcH4BAA
#HttpOnly_.youtube.com	TRUE	/	TRUE	1786197175	__Secure-3PSIDTS	sidts-CjUB5H03P9IIbV5n1gyv9tD6VlXuGQ1P4VNLuLNT-kDDUvys_LYvgfeGcvTsU2AlKqxgvJcH4BAA
#HttpOnly_.youtube.com	TRUE	/	FALSE	1789221175	HSID	Ai4eetE1IYfWEnF3k
#HttpOnly_.youtube.com	TRUE	/	TRUE	1789221175	SSID	AI7mJDzz4AWgKN4nn
.youtube.com	TRUE	/	FALSE	1789221175	APISID	9cjZVnMrfFeJ3gDI/An_GoxfC0CqHDaDmR
.youtube.com	TRUE	/	TRUE	1789221175	SAPISID	-tT08b1x5j9gfdg_/AppfSzzuRSbmtJzEq
.youtube.com	TRUE	/	TRUE	1789221175	__Secure-1PAPISID	-tT08b1x5j9gfdg_/AppfSzzuRSbmtJzEq
.youtube.com	TRUE	/	TRUE	1789221175	__Secure-3PAPISID	-tT08b1x5j9gfdg_/AppfSzzuRSbmtJzEq
.youtube.com	TRUE	/	FALSE	1789221175	SID	g.a0000AhjCxPDm95yXWQTxmtnsdsAtZkb6wEb4fs9DOkw9by3I8nooXcIYxxxn9zVELTw9mNQRgACgYKAeYSARASFQHGX2MiTDzAFfW-D-_S4kLlOmAKBxoVAUF8yKrrUQ_e-eELWJtIfsHO8AHv0076
#HttpOnly_.youtube.com	TRUE	/	TRUE	1789221175	__Secure-1PSID	g.a0000AhjCxPDm95yXWQTxmtnsdsAtZkb6wEb4fs9DOkw9by3I8no8Av5xOYgrw3p8xE8q3PKfQACgYKAa8SARASFQHGX2MinLrHYDL05rbhdiuD7cm8VRoVAUF8yKrDWYtGWNvHbRx-3JyyUiLx0076
#HttpOnly_.youtube.com	TRUE	/	TRUE	1789221175	__Secure-3PSID	g.a0000AhjCxPDm95yXWQTxmtnsdsAtZkb6wEb4fs9DOkw9by3I8noiomLRQ6BSnXDY0RIKLAJAQACgYKAQ8SARASFQHGX2Mi-dH-q3Piy1zAvZXinI1mUxoVAUF8yKpk-bptKqUd81O9vZX6j7gj0076
#HttpOnly_.youtube.com	TRUE	/	TRUE	1789221176	LOGIN_INFO	AFmmF2swRgIhAInzikd0on3FEFoeD366_ElXNLrDS4yeNMsAUcOPiJSxAiEAwQnaOyQBSLQJTOqutYKNzGAVlJ2Ptapl2TKOw0d1_Ms:QUQ3MjNmeTdNd2FaMjN6ek04cnpETzNITHFYSjNLdlBMbnZjcTVrQWR1MjFGX193Um4yZGltUXYxc0hhWTRhclZEb1owV1dEZUJIMmo3Y1lhSDhqLXhGT2JqNWRfMXZsV3NXMDdFMnFSem1iVk1JTVV5WG5OdUpRcGYwMWJ5STR3aXNfUTRuSU4zZnlzMkpCWU5WVlpCMjJtZjlQMUUwNTdR
.youtube.com	TRUE	/	TRUE	1789221406	PREF	f6=40000000&tz=Asia.Karachi&f7=100
.youtube.com	TRUE	/	FALSE	1786197454	SIDCC	AKEyXzWS9Jly6pKCuBbnxHUE6O2E5uvucsrBES4kxboh59OR9rlitEdHRuUXZ_LIGm-JMjXK
#HttpOnly_.youtube.com	TRUE	/	TRUE	1786197454	__Secure-1PSIDCC	AKEyXzXIE5QTsLymF78Z2SKigAFCNqXXiZk8AzTVFZNhRW8ezo7-HvjYWG53EWqA8whrKQik
#HttpOnly_.youtube.com	TRUE	/	TRUE	1786197454	__Secure-3PSIDCC	AKEyXzVPRsAG8UcHs8YeYhcYr8SdxMRKx2QVUcBeXY9B8eBty058Hgw4BeAsefuUjgRUBCEK"""
    
    # Process each line and update timestamps
    updated_lines = []
    lines = original_cookies.strip().split('\n')
    
    for line in lines:
        if line.startswith('#') and not line.startswith('#HttpOnly_'):
            # Keep comment lines as is
            updated_lines.append(line)
        elif line.strip() == '':
            # Keep empty lines as is
            updated_lines.append(line)
        else:
            # Process cookie lines (both regular and HttpOnly)
            if line.startswith('#HttpOnly_'):
                # Remove the #HttpOnly_ prefix for processing
                cookie_line = line[10:]  # Remove '#HttpOnly_'
                is_httponly = True
            else:
                cookie_line = line
                is_httponly = False
            
            # Split cookie fields: domain, domain_flag, path, secure, expiration, name, value
            fields = cookie_line.split('\t')
            if len(fields) >= 6:
                # Update the expiration timestamp (field index 4)
                fields[4] = str(future_timestamp)
                
                # Reconstruct the line
                updated_cookie_line = '\t'.join(fields)
                
                if is_httponly:
                    updated_lines.append('#HttpOnly_' + updated_cookie_line)
                else:
                    updated_lines.append(updated_cookie_line)
            else:
                # Keep malformed lines as is
                updated_lines.append(line)
    
    # Join all lines
    updated_cookies = '\n'.join(updated_lines)
    
    return updated_cookies, future_timestamp

def main():
    """Main function to update cookies and save to file."""
    print("YouTube Cookies Expiry Updater")
    print("=" * 50)
    
    # Update cookies expiry
    updated_cookies, new_timestamp = update_cookies_expiry()
    
    # Save to file
    output_file = "youtube_cookies_100years.txt"
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write(updated_cookies)
    
    print(f"\nUpdated cookies saved to: {output_file}")
    print(f"All cookies now expire on: {datetime.fromtimestamp(new_timestamp)}")
    print(f"Expiry timestamp: {new_timestamp}")
    
    # Also display the updated content
    print("\n" + "=" * 50)
    print("UPDATED COOKIES CONTENT:")
    print("=" * 50)
    print(updated_cookies)
    
    return output_file

if __name__ == "__main__":
    main()
